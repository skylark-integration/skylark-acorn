{"version":3,"sources":["scope.js"],"names":["define","m_state","m_scopeflags","Parser","SCOPE_VAR","SCOPE_FUNCTION","SCOPE_TOP","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","BIND_LEXICAL","BIND_SIMPLE_CATCH","BIND_FUNCTION","pp","prototype","enterScope","flags","this","scopeStack","push","[object Object]","var","lexical","functions","inClassFieldInit","exitScope","pop","treatFunctionsAsVarInScope","scope","inModule","declareName","name","bindingType","pos","redeclared","currentScope","indexOf","undefinedExports","treatFunctionsAsVar","i","length","raiseRecoverable","checkLocalExport","id","currentVarScope","currentThisScope"],"mappings":";;;;;;;AAAAA,QACI,UACA,gBACD,SAAUC,EAASC,GAClB,aACA,MAAMC,OAACA,GAAUF,GACXG,UAACA,EAASC,eAAEA,EAAcC,UAAEA,EAASC,YAAEA,EAAWC,mBAAEA,EAAkBC,aAAEA,EAAYC,kBAAEA,EAAiBC,cAAEA,GAAiBT,EAC1HU,EAAKT,EAAOU,UAUlBD,EAAGE,WAAa,SAAUC,GACtBC,KAAKC,WAAWC,KAAK,UATrBC,YAAYJ,GACRC,KAAKD,MAAQA,EACbC,KAAKI,OACLJ,KAAKK,WACLL,KAAKM,aACLN,KAAKO,kBAAmB,IAIGR,KAEnCH,EAAGY,UAAY,WACXR,KAAKC,WAAWQ,OAEpBb,EAAGc,2BAA6B,SAAUC,GACtC,OAAOA,EAAMZ,MAAQV,IAAmBW,KAAKY,UAAYD,EAAMZ,MAAQT,GAE3EM,EAAGiB,YAAc,SAAUC,EAAMC,EAAaC,GAC1C,IAAIC,GAAa,EACjB,GAAIF,IAAgBtB,EAAc,CAC9B,MAAMkB,EAAQX,KAAKkB,eACnBD,EAAaN,EAAMN,QAAQc,QAAQL,IAAS,GAAKH,EAAML,UAAUa,QAAQL,IAAS,GAAKH,EAAMP,IAAIe,QAAQL,IAAS,EAClHH,EAAMN,QAAQH,KAAKY,GACfd,KAAKY,UAAYD,EAAMZ,MAAQT,UACxBU,KAAKoB,iBAAiBN,QAC9B,GAAIC,IAAgBrB,EAAmB,CAC5BM,KAAKkB,eACbb,QAAQH,KAAKY,QAChB,GAAIC,IAAgBpB,EAAe,CACtC,MAAMgB,EAAQX,KAAKkB,eAEfD,EADAjB,KAAKqB,oBACQV,EAAMN,QAAQc,QAAQL,IAAS,EAE/BH,EAAMN,QAAQc,QAAQL,IAAS,GAAKH,EAAMP,IAAIe,QAAQL,IAAS,EAChFH,EAAML,UAAUJ,KAAKY,QAErB,IAAK,IAAIQ,EAAItB,KAAKC,WAAWsB,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAClD,MAAMX,EAAQX,KAAKC,WAAWqB,GAC9B,GAAIX,EAAMN,QAAQc,QAAQL,IAAS,KAAOH,EAAMZ,MAAQP,GAAsBmB,EAAMN,QAAQ,KAAOS,KAAUd,KAAKU,2BAA2BC,IAAUA,EAAML,UAAUa,QAAQL,IAAS,EAAG,CACvLG,GAAa,EACb,MAKJ,GAHAN,EAAMP,IAAIF,KAAKY,GACXd,KAAKY,UAAYD,EAAMZ,MAAQT,UACxBU,KAAKoB,iBAAiBN,GAC7BH,EAAMZ,MAAQX,EACd,MAGR6B,GACAjB,KAAKwB,iBAAiBR,iBAAqBF,iCAEnDlB,EAAG6B,iBAAmB,SAAUC,IACyB,IAAjD1B,KAAKC,WAAW,GAAGI,QAAQc,QAAQO,EAAGZ,QAA6D,IAA7Cd,KAAKC,WAAW,GAAGG,IAAIe,QAAQO,EAAGZ,QACxFd,KAAKoB,iBAAiBM,EAAGZ,MAAQY,IAGzC9B,EAAGsB,aAAe,WACd,OAAOlB,KAAKC,WAAWD,KAAKC,WAAWsB,OAAS,IAEpD3B,EAAG+B,gBAAkB,WACjB,IAAK,IAAIL,EAAItB,KAAKC,WAAWsB,OAAS,GAAID,IAAK,CAC3C,IAAIX,EAAQX,KAAKC,WAAWqB,GAC5B,GAAIX,EAAMZ,MAAQX,EACd,OAAOuB,IAGnBf,EAAGgC,iBAAmB,WAClB,IAAK,IAAIN,EAAItB,KAAKC,WAAWsB,OAAS,GAAID,IAAK,CAC3C,IAAIX,EAAQX,KAAKC,WAAWqB,GAC5B,GAAIX,EAAMZ,MAAQX,KAAeuB,EAAMZ,MAAQR,GAC3C,OAAOoB","file":"../scope.js","sourcesContent":["define([\n    './state',\n    './scopeflags'\n], function (m_state, m_scopeflags) {\n    'use strict';\n    const {Parser} = m_state;\n    const {SCOPE_VAR, SCOPE_FUNCTION, SCOPE_TOP, SCOPE_ARROW, SCOPE_SIMPLE_CATCH, BIND_LEXICAL, BIND_SIMPLE_CATCH, BIND_FUNCTION} = m_scopeflags;\n    const pp = Parser.prototype;\n    class Scope {\n        constructor(flags) {\n            this.flags = flags;\n            this.var = [];\n            this.lexical = [];\n            this.functions = [];\n            this.inClassFieldInit = false;\n        }\n    }\n    pp.enterScope = function (flags) {\n        this.scopeStack.push(new Scope(flags));\n    };\n    pp.exitScope = function () {\n        this.scopeStack.pop();\n    };\n    pp.treatFunctionsAsVarInScope = function (scope) {\n        return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;\n    };\n    pp.declareName = function (name, bindingType, pos) {\n        let redeclared = false;\n        if (bindingType === BIND_LEXICAL) {\n            const scope = this.currentScope();\n            redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n            scope.lexical.push(name);\n            if (this.inModule && scope.flags & SCOPE_TOP)\n                delete this.undefinedExports[name];\n        } else if (bindingType === BIND_SIMPLE_CATCH) {\n            const scope = this.currentScope();\n            scope.lexical.push(name);\n        } else if (bindingType === BIND_FUNCTION) {\n            const scope = this.currentScope();\n            if (this.treatFunctionsAsVar)\n                redeclared = scope.lexical.indexOf(name) > -1;\n            else\n                redeclared = scope.lexical.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n            scope.functions.push(name);\n        } else {\n            for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n                const scope = this.scopeStack[i];\n                if (scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1) {\n                    redeclared = true;\n                    break;\n                }\n                scope.var.push(name);\n                if (this.inModule && scope.flags & SCOPE_TOP)\n                    delete this.undefinedExports[name];\n                if (scope.flags & SCOPE_VAR)\n                    break;\n            }\n        }\n        if (redeclared)\n            this.raiseRecoverable(pos, `Identifier '${ name }' has already been declared`);\n    };\n    pp.checkLocalExport = function (id) {\n        if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) {\n            this.undefinedExports[id.name] = id;\n        }\n    };\n    pp.currentScope = function () {\n        return this.scopeStack[this.scopeStack.length - 1];\n    };\n    pp.currentVarScope = function () {\n        for (let i = this.scopeStack.length - 1;; i--) {\n            let scope = this.scopeStack[i];\n            if (scope.flags & SCOPE_VAR)\n                return scope;\n        }\n    };\n    pp.currentThisScope = function () {\n        for (let i = this.scopeStack.length - 1;; i--) {\n            let scope = this.scopeStack[i];\n            if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW))\n                return scope;\n        }\n    };\n});"]}