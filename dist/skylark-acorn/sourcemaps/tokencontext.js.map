{"version":3,"sources":["tokencontext.js"],"names":["define","m_state","tt","m_whitespace","Parser","lineBreak","TokContext","[object Object]","token","isExpr","preserveSpace","override","generator","this","types","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","p","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp","prototype","initialContext","curContext","context","length","braceIsBlock","prevType","parent","colon","_return","name","exprAllowed","test","input","slice","lastTokEnd","start","_else","semi","eof","parenR","arrow","braceL","_var","_const","inGeneratorContext","i","updateContext","update","type","keyword","dot","call","beforeExpr","overrideContext","tokenCtx","braceR","out","pop","push","dollarBraceL","parenL","statementParens","_if","_for","_with","_while","incDec","_function","_class","backQuote","star","index","allowed","options","ecmaVersion","value"],"mappings":"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","file":"../tokencontext.js","sourcesContent":["define([\n    './state',\n    './tokentype',\n    './whitespace'\n], function (m_state, tt, m_whitespace) {\n    'use strict';\n    const {Parser} = m_state;\n    const {lineBreak} = m_whitespace;\n    class TokContext {\n        constructor(token, isExpr, preserveSpace, override, generator) {\n            this.token = token;\n            this.isExpr = !!isExpr;\n            this.preserveSpace = !!preserveSpace;\n            this.override = override;\n            this.generator = !!generator;\n        }\n    }\n    const types = {\n        b_stat: new TokContext('{', false),\n        b_expr: new TokContext('{', true),\n        b_tmpl: new TokContext('${', false),\n        p_stat: new TokContext('(', false),\n        p_expr: new TokContext('(', true),\n        q_tmpl: new TokContext('`', true, true, p => p.tryReadTemplateToken()),\n        f_stat: new TokContext('function', false),\n        f_expr: new TokContext('function', true),\n        f_expr_gen: new TokContext('function', true, false, null, true),\n        f_gen: new TokContext('function', false, false, null, true)\n    };\n    const pp = Parser.prototype;\n    pp.initialContext = function () {\n        return [types.b_stat];\n    };\n    pp.curContext = function () {\n        return this.context[this.context.length - 1];\n    };\n    pp.braceIsBlock = function (prevType) {\n        let parent = this.curContext();\n        if (parent === types.f_expr || parent === types.f_stat)\n            return true;\n        if (prevType === tt.colon && (parent === types.b_stat || parent === types.b_expr))\n            return !parent.isExpr;\n        if (prevType === tt._return || prevType === tt.name && this.exprAllowed)\n            return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n        if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof || prevType === tt.parenR || prevType === tt.arrow)\n            return true;\n        if (prevType === tt.braceL)\n            return parent === types.b_stat;\n        if (prevType === tt._var || prevType === tt._const || prevType === tt.name)\n            return false;\n        return !this.exprAllowed;\n    };\n    pp.inGeneratorContext = function () {\n        for (let i = this.context.length - 1; i >= 1; i--) {\n            let context = this.context[i];\n            if (context.token === 'function')\n                return context.generator;\n        }\n        return false;\n    };\n    pp.updateContext = function (prevType) {\n        let update, type = this.type;\n        if (type.keyword && prevType === tt.dot)\n            this.exprAllowed = false;\n        else if (update = type.updateContext)\n            update.call(this, prevType);\n        else\n            this.exprAllowed = type.beforeExpr;\n    };\n    pp.overrideContext = function (tokenCtx) {\n        if (this.curContext() !== tokenCtx) {\n            this.context[this.context.length - 1] = tokenCtx;\n        }\n    };\n    tt.parenR.updateContext = tt.braceR.updateContext = function () {\n        if (this.context.length === 1) {\n            this.exprAllowed = true;\n            return;\n        }\n        let out = this.context.pop();\n        if (out === types.b_stat && this.curContext().token === 'function') {\n            out = this.context.pop();\n        }\n        this.exprAllowed = !out.isExpr;\n    };\n    tt.braceL.updateContext = function (prevType) {\n        this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n        this.exprAllowed = true;\n    };\n    tt.dollarBraceL.updateContext = function () {\n        this.context.push(types.b_tmpl);\n        this.exprAllowed = true;\n    };\n    tt.parenL.updateContext = function (prevType) {\n        let statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while;\n        this.context.push(statementParens ? types.p_stat : types.p_expr);\n        this.exprAllowed = true;\n    };\n    tt.incDec.updateContext = function () {\n    };\n    tt._function.updateContext = tt._class.updateContext = function (prevType) {\n        if (prevType.beforeExpr && prevType !== tt._else && !(prevType === tt.semi && this.curContext() !== types.p_stat) && !(prevType === tt._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === tt.colon || prevType === tt.braceL) && this.curContext() === types.b_stat))\n            this.context.push(types.f_expr);\n        else\n            this.context.push(types.f_stat);\n        this.exprAllowed = false;\n    };\n    tt.backQuote.updateContext = function () {\n        if (this.curContext() === types.q_tmpl)\n            this.context.pop();\n        else\n            this.context.push(types.q_tmpl);\n        this.exprAllowed = false;\n    };\n    tt.star.updateContext = function (prevType) {\n        if (prevType === tt._function) {\n            let index = this.context.length - 1;\n            if (this.context[index] === types.f_expr)\n                this.context[index] = types.f_expr_gen;\n            else\n                this.context[index] = types.f_gen;\n        }\n        this.exprAllowed = true;\n    };\n    tt.name.updateContext = function (prevType) {\n        let allowed = false;\n        if (this.options.ecmaVersion >= 6 && prevType !== tt.dot) {\n            if (this.value === 'of' && !this.exprAllowed || this.value === 'yield' && this.inGeneratorContext())\n                allowed = true;\n        }\n        this.exprAllowed = allowed;\n    };\n    return {\n        TokContext: TokContext,\n        types: types\n    };\n});"]}