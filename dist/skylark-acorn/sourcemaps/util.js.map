{"version":3,"sources":["util.js"],"names":["define","hasOwnProperty","toString","Object","prototype","hasOwn","obj","propName","call","isArray","Array","wordsRegexp","words","RegExp","replace","codePointToString","code","String","fromCharCode","loneSurrogate"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aACA,MAAMC,eAACA,EAAcC,SAAEA,GAAYC,OAAOC,UAa1C,OACIC,OAbWF,OAAOE,QAAU,EAAEC,EAAKC,IAAaN,EAAeO,KAAKF,EAAKC,IAczEE,QAbYC,MAAMD,SAAW,CAACH,GAA8B,mBAAvBJ,EAASM,KAAKF,IAcnDK,YAbJ,SAAqBC,GACjB,OAAO,IAAIC,OAAO,OAASD,EAAME,QAAQ,KAAM,KAAO,OAatDC,kBAXJ,SAA2BC,GACvB,OAAIA,GAAQ,MACDC,OAAOC,aAAaF,IAC/BA,GAAQ,MACDC,OAAOC,aAA4B,OAAdF,GAAQ,IAA6B,OAAR,KAAPA,MAQlDG,cANkB","file":"../util.js","sourcesContent":["define(function () {\n    'use strict';\n    const {hasOwnProperty, toString} = Object.prototype;\n    const hasOwn = Object.hasOwn || ((obj, propName) => hasOwnProperty.call(obj, propName));\n    const isArray = Array.isArray || (obj => toString.call(obj) === '[object Array]');\n    function wordsRegexp(words) {\n        return new RegExp('^(?:' + words.replace(/ /g, '|') + ')$');\n    }\n    function codePointToString(code) {\n        if (code <= 65535)\n            return String.fromCharCode(code);\n        code -= 65536;\n        return String.fromCharCode((code >> 10) + 55296, (code & 1023) + 56320);\n    }\n    const loneSurrogate = /[\\uD800-\\uDFFF]/u;\n    return {\n        hasOwn: hasOwn,\n        isArray: isArray,\n        wordsRegexp: wordsRegexp,\n        codePointToString: codePointToString,\n        loneSurrogate: loneSurrogate\n    };\n});"]}